package listeners;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;
import com.aventstack.extentreports.Status;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;
import utils.CaptureScreenshot;

import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class ExtentTestNGListener implements ITestListener {

    private static ExtentReports extent;
    private ThreadLocal<ExtentTest> extentTest = new ThreadLocal<>();

    @Override
    public void onStart(ITestContext context) {
        String timeStamp = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy.MM.dd.HH.mm.ss"));
        ExtentSparkReporter spark = new ExtentSparkReporter("ExtentReports_" + timeStamp + ".html");
        extent = new ExtentReports();
        extent.attachReporter(spark);
        extent.setSystemInfo("Host", "Localhost");
        extent.setSystemInfo("Environment", "Test");
        extent.setSystemInfo("Browser", context.getCurrentXmlTest().getParameter("browser"));
    }

    @Override
    public void onTestStart(ITestResult result) {
        ExtentTest test = extent.createTest(result.getMethod().getMethodName());
        test.assignCategory(result.getTestContext().getName());
        extentTest.set(test);
    }

    @Override
    public void onTestSuccess(ITestResult result) {
        extentTest.get().log(Status.PASS, "Test Passed");
    }

    @Override
    public void onTestFailure(ITestResult result) {
        extentTest.get().log(Status.FAIL, "Test Failed: " + result.getThrowable().getMessage());
        try {
            String screenshotBase64 = CaptureScreenshot.captureAsBase64(result.getMethod().getMethodName());
            extentTest.get().addScreenCaptureFromBase64String(screenshotBase64, "Screenshot on Failure");
        } catch (IOException e) {
            extentTest.get().log(Status.FAIL, "Screenshot capture failed: " + e.getMessage());
        }
    }

    @Override
    public void onFinish(ITestContext context) {
        if (extent != null) {
            extent.flush();
        }
    }
}